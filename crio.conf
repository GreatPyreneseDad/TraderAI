# TraderAI CRI-O Configuration
# Kubernetes-native container runtime optimized for security and performance

[crio]
# Root directory for storage
root = "/var/lib/containers/storage"

# Run directory for runtime
runroot = "/run/containers/storage"

# Path to the container storage configuration
storage_driver = "overlay"

# Storage options
storage_option = [
  "overlay.mountopt=nodev,metacopy=on",
  "overlay.size=50G"
]

# Network configuration directory
network_dir = "/etc/cni/net.d/"

# CNI plugin directory
plugin_dirs = ["/opt/cni/bin/"]

# Logging settings
log_dir = "/var/log/crio/pods"
log_level = "info"
log_size_max = -1
log_to_journald = true

# Container runtime settings
[crio.runtime]
# Default runtime
default_runtime = "runc"

# Runtime table
[crio.runtime.runtimes]
[crio.runtime.runtimes.runc]
runtime_path = "/usr/bin/runc"
runtime_type = "oci"
runtime_root = "/run/runc"

# Security settings
apparmor_profile = ""
selinux = true
seccomp_profile = "/etc/crio/seccomp.json"
default_capabilities = [
  "CHOWN",
  "DAC_OVERRIDE", 
  "FSETID",
  "FOWNER",
  "SETGID",
  "SETUID",
  "SETPCAP",
  "NET_BIND_SERVICE",
  "KILL"
]

# Container lifecycle hooks
hooks_dir = ["/etc/containers/oci/hooks.d"]

# Ulimit settings for TraderAI containers
default_ulimits = [
  "nofile=65536:65536",
  "nproc=8192:8192"
]

# Memory and CPU limits
pids_limit = 2048
log_size_max = 52428800

# Container security
no_pivot = false
conmon = "/usr/bin/conmon"
conmon_cgroup = "system.slice"
conmon_env = [
  "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
]

# OCI runtime settings
default_env = [
  "NSS_SDB_USE_CACHE=no"
]

# Image settings
[crio.image]
# Container image registry settings
default_transport = "docker://"
global_auth_file = ""
pause_image = "registry.k8s.io/pause:3.9"
pause_image_auth_file = ""
pause_command = "/pause"

# Image pulling settings
signature_policy = "/etc/containers/policy.json"
image_volumes = "mkdir"
big_files_temporary_dir = ""

# Registry configuration
[crio.image.registries]
# Default registry configuration
registries = ["docker.io"]

# Network settings
[crio.network]
# CNI network configuration
network_dir = "/etc/cni/net.d/"
plugin_dirs = ["/opt/cni/bin/"]

# Metrics configuration
[crio.metrics]
enable_metrics = true
metrics_port = 9090

# TraderAI specific runtime optimizations
[crio.runtime.workloads]
# Financial data processing workload
[crio.runtime.workloads.trading]
activation_annotation = "io.kubernetes.cri-o.TrustedSandbox"
annotation_prefix = "io.kubernetes.cri-o"
resources = { "cpu" = "1000m", "memory" = "2Gi" }

# AI/ML workload for PandasAI service
[crio.runtime.workloads.ml-processing]
activation_annotation = "io.kubernetes.cri-o.MLWorkload"
annotation_prefix = "io.kubernetes.cri-o"
resources = { "cpu" = "2000m", "memory" = "4Gi" }

# Database workload
[crio.runtime.workloads.database]
activation_annotation = "io.kubernetes.cri-o.DatabaseWorkload" 
annotation_prefix = "io.kubernetes.cri-o"
resources = { "cpu" = "500m", "memory" = "1Gi" }

# API backend workload
[crio.runtime.workloads.api]
activation_annotation = "io.kubernetes.cri-o.APIWorkload"
annotation_prefix = "io.kubernetes.cri-o" 
resources = { "cpu" = "1500m", "memory" = "3Gi" }

# Security profiles for TraderAI
[crio.runtime.security_profiles]
# High security profile for production trading
[crio.runtime.security_profiles.high-security]
default_capabilities = ["CHOWN", "SETGID", "SETUID"]
allowed_annotations = ["io.kubernetes.container.*"]
allowed_devices = []
allowed_syscalls = []

# Development profile for testing
[crio.runtime.security_profiles.development]
default_capabilities = [
  "CHOWN", "DAC_OVERRIDE", "FSETID", "FOWNER", 
  "SETGID", "SETUID", "SETPCAP", "NET_BIND_SERVICE", "KILL"
]
allowed_annotations = ["*"]

# Container lifecycle settings
[crio.runtime.lifecycle]
# PreStart hooks for TraderAI initialization  
pre_start = []

# PostStart hooks for health checks
post_start = []

# PreStop hooks for graceful shutdown
pre_stop = []

# PostStop hooks for cleanup
post_stop = []

# Monitoring and observability
[crio.runtime.monitoring]
# Enable detailed container metrics
enable_pod_events = true
enable_container_events = true

# Logging configuration for audit trails
[crio.runtime.logging]
# Audit logs for compliance
audit_enabled = true
audit_log_path = "/var/log/crio/audit.log"
audit_log_max_size = "100MB"
audit_log_max_files = 10

# Performance tuning for trading applications
[crio.runtime.performance]
# Enable performance monitoring
enable_cpu_load_balancing = true
enable_memory_swap_accounting = false
enable_oom_killer = true

# Container resource limits
default_cpu_quota = 100000
default_cpu_period = 100000
default_memory_limit = "2Gi"
default_memory_swap_limit = "2Gi"

# Network performance optimizations
[crio.network.performance]
# Enable network performance features
enable_bandwidth_plugin = true
enable_firewall_plugin = false
enable_portmap_plugin = true

# Storage performance settings
[crio.storage.performance]
# Storage driver optimizations
enable_quota = false
mount_options = "noatime,nodiratime"
storage_opts = [
  "overlay.mount_program=/usr/bin/fuse-overlayfs",
  "overlay.mountopt=nodev,metacopy=on"
]